--DROP TABLE IF EXISTS friendship;
--DROP TABLE IF EXISTS likes;
--DROP TABLE IF EXISTS film_genre;
--DROP TABLE IF EXISTS users;
--DROP TABLE IF EXISTS films;
--DROP TABLE IF EXISTS genres;
--DROP TABLE IF EXISTS ratings;


CREATE TABLE IF NOT EXISTS genres
(
    id      SMALLINT GENERATED BY DEFAULT AS IDENTITY,
    name    CHARACTER VARYING(64)  NOT NULL UNIQUE,
    CONSTRAINT pk_genres PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS ratings
(
    id      SMALLINT  GENERATED BY DEFAULT AS IDENTITY,
    name    CHARACTER VARYING(5)   NOT NULL UNIQUE,
    CONSTRAINT pk_ratings PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS films (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    title VARCHAR(128) NOT NULL,
    description VARCHAR(200),
    rating_id SMALLINT NOT NULL,
    release_date DATE,
    duration INTEGER NOT NULL,
    CONSTRAINT pk_films PRIMARY KEY (id),
    CONSTRAINT chk_films_duration CHECK (duration > 0),
    FOREIGN KEY (rating_id) REFERENCES ratings(id)
);

CREATE TABLE IF NOT EXISTS users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    login VARCHAR(32) NOT NULL,
    username VARCHAR(128) NOT NULL,
    email VARCHAR(255) NOT NULL,
    birthday DATE,
    CONSTRAINT pk_users PRIMARY KEY (id),
    CONSTRAINT uq_users_login UNIQUE (login),
    CONSTRAINT uq_users_email UNIQUE (email),
    CONSTRAINT chk_login_length CHECK (LENGTH(login) BETWEEN 3 AND 32)
);

CREATE TABLE IF NOT EXISTS film_genre (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    film_id BIGINT NOT NULL,
    genre_id SMALLINT NOT NULL,
    CONSTRAINT pk_film_genre PRIMARY KEY (id),
    FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE,
    FOREIGN KEY (genre_id) REFERENCES genres(id) ON DELETE CASCADE,
    CONSTRAINT uq_film_genre_pair UNIQUE (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS likes (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    user_id BIGINT NOT NULL,
    film_id BIGINT NOT NULL,
    CONSTRAINT pk_likes PRIMARY KEY (id),
    CONSTRAINT uq_user_film_pair UNIQUE (user_id, film_id),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS friendship (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY,
    user_id BIGINT NOT NULL,
    friend_id BIGINT NOT NULL,
    CONSTRAINT pk_friendship PRIMARY KEY (id),
    CONSTRAINT uq_friendship_pair UNIQUE (user_id, friend_id),
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE,
    FOREIGN KEY (friend_id) REFERENCES users(id) ON DELETE CASCADE
);